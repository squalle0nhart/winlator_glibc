apply plugin: 'com.android.application'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('./app/key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdk 34
    namespace 'com.winlator'
    defaultConfig {
        applicationId 'com.winlator'
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 17
        versionName "7.1.1-glibc"
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }

        ndk {
            abiFilters 'arm64-v8a'
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']

        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ndk {
                abiFilters 'arm64-v8a'
            }
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ndk {
                abiFilters 'arm64-v8a'
            }
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ndk {
                abiFilters 'arm64-v8a'
            }
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        pickFirst 'lib/arm64-v8a/libopenxr_loader.so'
    }

    lintOptions {
        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.material
    implementation libs.preference
    implementation libs.xz
    implementation libs.commons.compress
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    implementation(libs.zstd.jni) { artifact { type = 'aar' } }
}
